{"type":"entity","name":"PdfViewer Component Refactoring","entityType":"Development Task","observations":["Refactored PdfViewer.vue component on 2025-08-17","Integrated @vueuse/core libraries: useDropZone, useFileDialog, useObjectUrl","Applied Vue 3 modern features: defineModel(), watchEffect(), computed reactives","Eliminated download functionality per user request","Removed size variants system (sm/md/lg props)","Simplified component with empty Props interface","Reduced code by ~50 lines","Automatic cleanup of object URLs","No manual drag/drop event handling","TypeScript import errors pending resolution with '@/components/ui/*' paths"]}
{"type":"entity","name":"PDF Auto-Search Feature","entityType":"Feature Request","observations":["Extract first digits from PDF filename for automatic search","Target: CI (Carnet de Identidad) extraction from filename","Integration with existing diploma registration system","Should work with refactored PdfViewer component","Bolivian CI format: 7-10 digits","Auto-trigger person search when valid CI found in filename","User suggests using emit approach for filename extraction","Emit filename from PdfViewer component","Connect filename directly to persona store","Simpler architecture: PdfViewer → emit → store integration","Decoupled design pattern preferred","Successfully implemented in DiplomasAcademicos/Create.vue","Uses extractCIFromFilename() and isValidBolivianCI() from documents.ts","Automatically triggers personalDataStore.searchPerson() when valid CI found","Includes console logging for debugging","File selection and removal events also handled","Complete integration between PdfViewer, documents utils, and personal data store","Bug fix applied: corrected method name from searchPerson() to searchPersonInApi()","Integration complete and functional in DiplomasAcademicos/Create.vue","Auto-search triggers when valid CI detected in PDF filename","Uses existing store method searchPersonInApi() for API calls","Ready for testing with properly formatted PDF filenames","User proposes refactoring personal data form components","Make components less dependent on store","PersonalDataForm would receive PersonalData as prop + editable flag","ApiPersonSearch would receive CI as prop and return search results","Question: Is this approach better than current store-based implementation?"]}
{"type":"entity","name":"PdfViewer Component","entityType":"Vue Component","observations":["Located at resources/js/components/forms/PdfViewer.vue","Recently refactored using @vueuse/core libraries","Uses defineModel() for v-model implementation","Implements drag & drop PDF upload functionality","Fixed height of 600px for PDF viewer iframe","Validates PDF files (type and 50MB size limit)","No download functionality (removed per user request)","No size variants (simplified design)","Ready for PDF auto-search integration","Will be used across multiple title types","Must be completely independent and reusable","Should not contain business logic specific to any title type","Needs agnostic event system","Component reusability is critical requirement"]}
{"type":"entity","name":"Documents Utilities","entityType":"Utility Library","observations":["Created at resources/js/lib/documents.ts","Contains functions for Bolivian document processing","extractCIFromString() - extracts CI from any string","extractCIFromFilename() - specialized for PDF filenames","isValidBolivianCI() - validates CI format (7-10 digits)","formatCIForDisplay() - formats CI for UI display","extractDiplomaNumber() - extracts diploma numbers for future use","Follows Single Responsibility Principle","Reusable across multiple title types","Pure functions without side effects","extractCIFromFilename() expects CI at start of filename","Removes file extension before processing","Supports 7-10 digit CI format (Bolivian standard)","Uses regex pattern /^(\\d{7,10})/ to match","Examples: 12345678.pdf, 1234567890_diploma.pdf, 12345678-titulo.pdf","Updated to accept minLength parameter (default 4)","New regex pattern /^(\\d+)(?:\\s|$|-)/ supports spaces and hyphens after CI","Accepts format '8631891 -Hector' and extracts '8631891'","Configurable minimum CI length for different use cases","Maintains maximum length of 10 digits","Functions updated: extractCIFromString(), extractCIFromFilename(), isValidBolivianCI()"]}
{"type":"entity","name":"FormularioStepperDiplomas","entityType":"component","observations":["Formulario de registro de diplomas académicos implementado con stepper de 2 pasos usando shadcn/vue","Layout de 2 columnas: stepper form izquierda, PDF viewer derecha siempre visible","Paso 1: Búsqueda API por CI + formulario datos personales","Paso 2: Datos específicos del diploma académico (placeholder implementado)","Navegación con botones Anterior/Siguiente/Registrar Diploma","Implementado en resources/js/Pages/DiplomasAcademicos/Create.vue"]}
{"type":"entity","name":"SincronizacionPdfApi","entityType":"feature","observations":["Sincronización automática entre subida de PDF y búsqueda en API universitaria","Extracción de CI desde nombre de archivo PDF usando regex \\b(\\d{6,10})\\b","Método setCiAndSearch() en store actualiza input y ejecuta búsqueda automática","Al subir PDF como 12345678.pdf automáticamente busca persona con CI 12345678","Implementado en usePersonalDataStore.ts y Create.vue"]}
{"type":"entity","name":"ComponenteStepperShadcn","entityType":"uiComponent","observations":["Componente stepper instalado desde shadcn/vue usando npx shadcn-vue@latest add stepper","Incluye Stepper, StepperDescription, StepperIndicator, StepperItem, StepperSeparator, StepperTitle, StepperTrigger","Configuración con iconos User para paso 1 y GraduationCap para paso 2","Estado reactivo currentStep controla navegación entre pasos","Navegación visual con separadores y estados completed/active"]}
{"type":"relation","from":"PdfViewer Component Refactoring","to":"@vueuse/core","relationType":"uses"}
{"type":"relation","from":"PdfViewer Component Refactoring","to":"Vue 3 Composition API","relationType":"implements"}
{"type":"relation","from":"PdfViewer Component Refactoring","to":"TypeScript","relationType":"has issues with"}
{"type":"relation","from":"PDF Auto-Search Feature","to":"PdfViewer Component","relationType":"will be integrated into"}
{"type":"relation","from":"PDF Auto-Search Feature","to":"CI Extraction","relationType":"requires"}
{"type":"relation","from":"PdfViewer Component","to":"@vueuse/core","relationType":"uses"}
{"type":"relation","from":"PdfViewer Component","to":"Documents Utilities","relationType":"will use"}
{"type":"relation","from":"PDF Auto-Search Feature","to":"Documents Utilities","relationType":"depends on"}
{"type":"relation","from":"Documents Utilities","to":"Titulos Claude Project","relationType":"is part of"}
{"type":"relation","from":"FormularioStepperDiplomas","to":"SincronizacionPdfApi","relationType":"utiliza"}
{"type":"relation","from":"FormularioStepperDiplomas","to":"ComponenteStepperShadcn","relationType":"implementa"}
{"type":"relation","from":"SincronizacionPdfApi","to":"usePersonalDataStore","relationType":"modifica"}
{"type":"relation","from":"ComponenteStepperShadcn","to":"shadcn/vue","relationType":"importa_desde"}